{"version":3,"sources":["read-intcode.js","index.js","C:/Users/Johnh/AppData/Roaming/npm/node_modules/parcel/src/builtins/hmr-runtime.js"],"names":["STATE","ON","INPUT","EXIT","PARAMETER_MODE","POSITION","IMMEDIATE","RELATIVE","debugParam","makeProgram","intcode","reduce","map","code","address","BigInt","outputBuffer","inputBuffer","currentState","pointer","relativeBase","getParameterAddress","mode","sanitizeParam","getParameterAddresses","modes","index","makeOperation","operation","addresses","param","addOperation","params","paramAddress1","paramAddress2","outputAddress","param1","param2","output","multiplyOperation","inputOperation","inputAddress","inputValue","pop","outputOperation","push","toString","jumpIfTrueOperation","checkValue","gotoValue","jumpIfFalseOperation","lessThanOperation","oneValue","anotherValue","outputValue","equalsOperation","adjustRelativeBaseOperation","adjustValue","OP","getInstructions","instructionString","padStart","opcode","slice","length","split","reverse","run","input","undefined","console","log","result","splice","state","module","exports","require","getMapKey","x","y","program","TILE_TYPES","TILE_WIDTH","TILE_HEIGHT","COLORS","game","tiles","score","playerPos","ballPos","lastUpdate","Date","now","FPS","nextDir","canvas","document","getElementById","context","getContext","scoreElement","updateTile","type","mapKey","tileType","draw","clearRect","width","height","Object","values","forEach","tile","fillStyle","fillRect","PADDLE","BALL","innerHTML","update","cx1","cy1","ct1","window","requestAnimationFrame","addEventListener","e","key","OVERLAY_ID","OldModule","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","body","appendChild","remove","createElement","stackTrace","innerText","getParents","modules","parents","k","d","dep","Array","isArray","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"day-13.e31bb0bc.js","sourceRoot":"..","sourcesContent":["const STATE = {\r\n    ON: 'ON',\r\n    INPUT: 'INPUT',\r\n\tEXIT: 'EXIT'\r\n};\r\n\r\nconst PARAMETER_MODE = {\r\n\tPOSITION: '0',\r\n\tIMMEDIATE: '1',\r\n\tRELATIVE: '2'\r\n};\r\nlet debugParam = false;\r\n\r\nconst makeProgram = intcode => {\r\n\tintcode = intcode.reduce((map, code, address) => {\r\n\t\tmap[address] = BigInt(code);\r\n\t\treturn map;\r\n\t}, {});\r\n\r\n\tconst outputBuffer = [];\r\n\tconst inputBuffer = [];\r\n\r\n\tlet currentState = STATE.ON;\r\n\tlet pointer = BigInt(0);\r\n\tlet relativeBase = BigInt(0);\r\n\r\n\tconst getParameterAddress = (intcode, pointer, mode) => {\r\n\t\tswitch (mode) {\r\n\t\t\tcase PARAMETER_MODE.POSITION:\r\n\t\t\t\treturn intcode[pointer];\r\n\t\t\tcase PARAMETER_MODE.IMMEDIATE:\r\n\t\t\t\treturn pointer;\r\n\t\t\tcase PARAMETER_MODE.RELATIVE:\r\n\t\t\t\treturn sanitizeParam(intcode[pointer]) + relativeBase;\r\n\t\t}\r\n\t};\r\n\tconst getParameterAddresses = (intcode, pointer, modes) =>\r\n\t\tmodes.map((mode, index) => {\r\n\t\t\treturn getParameterAddress(\r\n\t\t\t\tintcode,\r\n\t\t\t\tpointer + BigInt(index + 1),\r\n\t\t\t\tmode\r\n\t\t\t);\r\n\t\t});\r\n\tconst makeOperation = operation => (intcode, pointer, modes) => {\r\n\t\tconst addresses = getParameterAddresses(intcode, pointer, modes);\r\n\t\treturn operation(intcode, pointer, addresses);\r\n\t};\r\n\tconst sanitizeParam = param =>\r\n\t\tparam ? (typeof param === 'bigint' ? param : BigInt(param)) : BigInt(0);\r\n\r\n\tconst addOperation = makeOperation((intcode, pointer, params) => {\r\n\t\tconst [paramAddress1, paramAddress2, outputAddress] = params;\r\n\r\n\t\tconst param1 = sanitizeParam(intcode[paramAddress1]);\r\n\t\tconst param2 = sanitizeParam(intcode[paramAddress2]);\r\n\r\n\t\tlet output = param1 + param2;\r\n\t\tintcode[outputAddress] = output;\r\n\t\treturn {\r\n\t\t\tpointer: pointer + BigInt(4)\r\n\t\t}\r\n\t});\r\n\tconst multiplyOperation = makeOperation((intcode, pointer, params) => {\r\n\t\tconst [paramAddress1, paramAddress2, outputAddress] = params;\r\n\r\n\t\tconst param1 = sanitizeParam(intcode[paramAddress1]);\r\n\t\tconst param2 = sanitizeParam(intcode[paramAddress2]);\r\n\r\n\t\tlet output = param1 * param2;\r\n\t\tintcode[outputAddress] = output;\r\n\r\n\t\treturn {\r\n\t\t\tpointer: pointer + BigInt(4)\r\n\t\t}\r\n\t});\r\n\r\n\tconst inputOperation = makeOperation((intcode, pointer, params) => {\r\n\t\tconst [inputAddress] = params;\r\n        const inputValue = sanitizeParam(inputBuffer.pop());\r\n        currentState = STATE.INPUT;\r\n\t\tintcode[inputAddress] = inputValue\r\n\r\n\t\treturn {\r\n\t\t\tpointer: pointer + BigInt(2)\r\n\t\t};\r\n\t});\r\n\tconst outputOperation = makeOperation((intcode, pointer, params) => {\r\n\t\tconst [outputAddress] = params;\r\n\t\tconst output = intcode[outputAddress];\r\n\t\toutputBuffer.push(output.toString());\r\n\r\n\t\treturn {\r\n\t\t\tpointer: pointer + BigInt(2),\r\n\t\t\toutput\r\n\t\t}\r\n\t});\r\n\tconst jumpIfTrueOperation = makeOperation((intcode, pointer, params) => {\r\n\t\tconst [paramAddress1, paramAddress2] = params;\r\n\t\tconst checkValue = sanitizeParam(intcode[paramAddress1]);\r\n\t\tlet gotoValue = pointer + BigInt(3);\r\n\r\n\t\tif (checkValue != 0) {\r\n\t\t\tgotoValue = sanitizeParam(intcode[paramAddress2]);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tpointer: gotoValue\r\n\t\t}\r\n\t});\r\n\r\n\tconst jumpIfFalseOperation = makeOperation((intcode, pointer, params) => {\r\n\t\tconst [paramAddress1, paramAddress2] = params;\r\n\t\tconst checkValue = sanitizeParam(intcode[paramAddress1]);\r\n\t\tlet gotoValue = pointer + BigInt(3);\r\n\r\n\t\tif (checkValue == 0) {\r\n\t\t\tgotoValue = sanitizeParam(intcode[paramAddress2]);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tpointer: gotoValue\r\n\t\t}\r\n\t});\r\n\r\n\tconst lessThanOperation = makeOperation((intcode, pointer, params) => {\r\n\t\tconst [paramAddress1, paramAddress2, outputAddress] = params;\r\n\t\tconst oneValue = sanitizeParam(intcode[paramAddress1]);\r\n\t\tconst anotherValue = sanitizeParam(intcode[paramAddress2]);\r\n\t\tconst outputValue = oneValue < anotherValue ? 1 : 0;\r\n\r\n\t\tintcode[outputAddress] = BigInt(outputValue);\r\n\r\n\t\treturn {\r\n\t\t\tpointer: pointer + BigInt(4)\r\n\t\t}\r\n\t});\r\n\r\n\tconst equalsOperation = makeOperation((intcode, pointer, params) => {\r\n\t\tconst [paramAddress1, paramAddress2, outputAddress] = params;\r\n\t\tconst oneValue = sanitizeParam(intcode[paramAddress1]);\r\n\t\tconst anotherValue = sanitizeParam(intcode[paramAddress2]);\r\n\t\tconst outputValue = oneValue == anotherValue ? 1 : 0;\r\n\r\n\t\tintcode[outputAddress] = BigInt(outputValue);\r\n\r\n\t\treturn {\r\n\t\t\tpointer: pointer + BigInt(4)\r\n\t\t}\r\n\t});\r\n\r\n\tconst adjustRelativeBaseOperation = makeOperation(\r\n\t\t(intcode, pointer, params) => {\r\n\t\t\tconst [paramAddress1] = params;\r\n\t\t\tconst adjustValue = sanitizeParam(intcode[paramAddress1]);\r\n\t\t\trelativeBase = relativeBase + adjustValue;\r\n\r\n\t\t\treturn {\r\n\t\t\t\tpointer: pointer + BigInt(2)\r\n\t\t\t};\r\n\t\t}\r\n\t);\r\n\r\n\tconst OP = {\r\n\t\t'01': addOperation,\r\n\t\t'02': multiplyOperation,\r\n\t\t'03': inputOperation,\r\n\t\t'04': outputOperation,\r\n\t\t'05': jumpIfTrueOperation,\r\n\t\t'06': jumpIfFalseOperation,\r\n\t\t'07': lessThanOperation,\r\n\t\t'08': equalsOperation,\r\n\t\t'09': adjustRelativeBaseOperation\r\n\t};\r\n\r\n\tconst getInstructions = instructionString => {\r\n\t\tinstructionString = instructionString.toString().padStart(4, '0');\r\n\t\tconst opcode = instructionString.slice(instructionString.length - 2);\r\n\r\n\t\tconst operation = OP[opcode] || false;\r\n\r\n\t\tconst modes = instructionString\r\n\t\t\t.slice(0, instructionString.length - 2)\r\n\t\t\t.padStart(3, '0')\r\n\t\t\t.split('')\r\n\t\t\t.reverse();\r\n\r\n\t\treturn {\r\n\t\t\toperation,\r\n\t\t\tmodes,\r\n\t\t\topcode: opcode | 0\r\n\t\t};\r\n\t};\r\n\r\n\tconst run = input => {\r\n\t\tif(input !== undefined) {\r\n\t\t\tinputBuffer.push(input);\r\n\t\t}\r\n\t\twhile(currentState !== STATE.EXIT) {\r\n\t\t\tconst { operation, modes, opcode } = getInstructions(intcode[pointer]);\r\n\t\t\tif (debugParam) {\r\n\t\t\t\tconsole.log({\r\n\t\t\t\t\tpointer,\r\n\t\t\t\t\topcode,\r\n\t\t\t\t\tmodes\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (operation) {\r\n\t\t\t\tconst result = operation(intcode, pointer, modes);\r\n\t\t\t\tpointer = result.pointer;\r\n\t\t\t} else {\r\n\t\t\t\tcurrentState = STATE.EXIT;\r\n\t\t\t\treturn [];\r\n\t\t\t}\r\n\r\n\t\t\tif(outputBuffer.length === 3) {\r\n\t\t\t\treturn outputBuffer.splice(0);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn {\r\n\t\trun,\r\n\t\tget state() {\r\n\t\t\treturn currentState;\r\n\t\t}\r\n\t};\r\n};\r\nmodule.exports = makeProgram;\r\n","const makeProgram = require('./read-intcode');\r\nconst intcode = \"2,380,379,385,1008,2367,810138,381,1005,381,12,99,109,2368,1101,0,0,383,1102,0,1,382,21001,382,0,1,20101,0,383,2,21102,37,1,0,1106,0,578,4,382,4,383,204,1,1001,382,1,382,1007,382,36,381,1005,381,22,1001,383,1,383,1007,383,24,381,1005,381,18,1006,385,69,99,104,-1,104,0,4,386,3,384,1007,384,0,381,1005,381,94,107,0,384,381,1005,381,108,1105,1,161,107,1,392,381,1006,381,161,1102,1,-1,384,1106,0,119,1007,392,34,381,1006,381,161,1101,0,1,384,20101,0,392,1,21101,22,0,2,21101,0,0,3,21101,0,138,0,1105,1,549,1,392,384,392,21001,392,0,1,21102,22,1,2,21101,3,0,3,21101,161,0,0,1106,0,549,1101,0,0,384,20001,388,390,1,21001,389,0,2,21102,1,180,0,1106,0,578,1206,1,213,1208,1,2,381,1006,381,205,20001,388,390,1,20101,0,389,2,21101,0,205,0,1106,0,393,1002,390,-1,390,1101,0,1,384,21002,388,1,1,20001,389,391,2,21102,228,1,0,1106,0,578,1206,1,261,1208,1,2,381,1006,381,253,21002,388,1,1,20001,389,391,2,21101,0,253,0,1105,1,393,1002,391,-1,391,1102,1,1,384,1005,384,161,20001,388,390,1,20001,389,391,2,21102,279,1,0,1105,1,578,1206,1,316,1208,1,2,381,1006,381,304,20001,388,390,1,20001,389,391,2,21101,0,304,0,1106,0,393,1002,390,-1,390,1002,391,-1,391,1101,1,0,384,1005,384,161,21002,388,1,1,20102,1,389,2,21102,1,0,3,21102,1,338,0,1105,1,549,1,388,390,388,1,389,391,389,21001,388,0,1,21002,389,1,2,21101,4,0,3,21101,365,0,0,1105,1,549,1007,389,23,381,1005,381,75,104,-1,104,0,104,0,99,0,1,0,0,0,0,0,0,213,16,19,1,1,18,109,3,21202,-2,1,1,22102,1,-1,2,21101,0,0,3,21102,1,414,0,1105,1,549,21201,-2,0,1,21201,-1,0,2,21101,429,0,0,1106,0,601,2101,0,1,435,1,386,0,386,104,-1,104,0,4,386,1001,387,-1,387,1005,387,451,99,109,-3,2106,0,0,109,8,22202,-7,-6,-3,22201,-3,-5,-3,21202,-4,64,-2,2207,-3,-2,381,1005,381,492,21202,-2,-1,-1,22201,-3,-1,-3,2207,-3,-2,381,1006,381,481,21202,-4,8,-2,2207,-3,-2,381,1005,381,518,21202,-2,-1,-1,22201,-3,-1,-3,2207,-3,-2,381,1006,381,507,2207,-3,-4,381,1005,381,540,21202,-4,-1,-1,22201,-3,-1,-3,2207,-3,-4,381,1006,381,529,21201,-3,0,-7,109,-8,2106,0,0,109,4,1202,-2,36,566,201,-3,566,566,101,639,566,566,1202,-1,1,0,204,-3,204,-2,204,-1,109,-4,2105,1,0,109,3,1202,-1,36,594,201,-2,594,594,101,639,594,594,20102,1,0,-2,109,-3,2105,1,0,109,3,22102,24,-2,1,22201,1,-1,1,21102,1,439,2,21102,1,233,3,21102,1,864,4,21101,0,630,0,1106,0,456,21201,1,1503,-2,109,-3,2105,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,2,0,0,2,2,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,2,0,2,0,0,0,0,0,0,0,1,1,0,0,2,2,0,0,0,2,2,2,0,0,0,2,0,2,2,0,0,0,0,2,2,2,0,0,0,2,2,0,0,0,2,0,1,1,0,0,0,2,2,2,2,2,0,0,2,0,2,0,2,0,2,0,2,0,0,0,0,2,2,0,0,2,0,2,2,2,2,0,1,1,0,0,2,0,2,0,0,2,0,2,0,0,0,2,2,2,0,0,2,0,2,2,0,2,2,2,0,0,0,0,0,2,2,0,1,1,0,2,0,2,0,2,2,2,2,0,0,2,2,0,0,2,0,2,2,0,2,2,2,0,0,0,0,0,0,0,0,0,2,0,1,1,0,0,2,0,0,0,2,2,2,0,0,0,0,0,2,0,2,0,0,0,2,0,2,2,2,0,0,2,0,2,0,0,0,0,1,1,0,2,0,0,0,2,0,2,2,0,0,0,0,2,2,0,2,0,0,2,2,0,0,0,0,0,2,0,2,2,0,0,0,0,1,1,0,2,2,2,0,2,0,0,2,0,2,0,0,0,2,2,0,2,0,0,0,0,2,0,0,2,0,2,0,2,0,0,2,0,1,1,0,0,0,0,0,0,2,2,0,0,2,2,0,2,2,0,2,0,0,0,2,2,0,0,0,0,0,2,0,0,2,2,2,0,1,1,0,2,2,0,2,0,2,2,0,2,2,2,0,2,0,0,2,2,0,0,2,2,0,2,0,0,0,0,0,2,0,0,0,0,1,1,0,0,2,0,0,2,2,0,2,2,0,2,2,0,2,2,0,0,2,0,0,0,0,0,2,2,0,0,0,2,2,0,0,0,1,1,0,0,2,2,0,2,0,2,2,0,2,2,0,0,2,2,2,0,0,0,0,0,0,0,2,0,0,2,0,0,0,2,0,0,1,1,0,2,2,2,0,0,2,0,0,0,2,0,0,2,0,2,0,0,2,2,0,0,0,2,0,2,2,2,0,0,0,0,2,0,1,1,0,0,0,2,2,0,2,0,0,2,0,0,0,2,2,2,0,0,0,2,2,0,0,2,0,0,0,0,2,0,0,0,0,0,1,1,0,0,2,2,2,0,0,2,0,0,0,0,0,2,0,2,2,2,2,0,0,0,2,0,0,2,0,2,0,2,0,2,2,0,1,1,0,0,0,2,0,0,0,0,0,0,0,2,0,0,2,2,0,2,2,0,0,2,0,2,2,0,2,0,0,0,0,2,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,6,16,92,72,80,96,26,54,61,9,5,36,81,14,76,83,59,88,74,16,69,57,76,35,51,42,88,8,89,80,10,96,1,1,18,93,46,94,5,40,63,18,90,31,7,8,46,96,13,53,21,13,66,64,67,26,11,77,23,46,8,20,97,24,26,9,11,65,36,71,13,35,18,81,66,40,88,89,56,9,24,8,78,16,44,20,57,1,69,13,71,77,37,68,31,18,32,60,37,70,8,3,46,41,18,50,78,87,4,94,91,82,96,76,15,73,47,85,6,8,92,7,46,72,68,90,22,78,6,66,1,26,98,85,80,66,95,39,62,81,52,35,98,71,58,8,55,16,93,75,77,47,36,41,91,39,20,97,13,5,31,67,91,96,10,75,7,95,59,43,90,94,25,89,21,66,98,11,2,49,67,25,96,91,72,51,41,47,1,76,30,55,20,5,97,61,73,43,79,13,16,81,1,27,11,96,47,89,48,26,25,34,37,64,13,53,69,41,30,39,93,80,34,75,41,30,42,42,49,68,49,37,40,62,93,77,86,49,72,52,5,78,31,86,86,62,60,56,17,19,80,2,39,49,50,85,63,48,61,95,82,21,18,85,16,86,45,75,28,97,33,21,56,96,40,33,95,69,53,75,47,70,51,80,92,4,54,79,59,42,15,30,86,27,86,63,64,36,27,98,49,58,78,5,16,57,61,32,14,25,51,75,96,93,25,87,20,76,32,96,96,39,84,48,62,82,11,36,1,11,44,71,86,58,4,74,35,3,31,3,27,52,78,96,10,43,16,93,93,61,23,54,90,47,81,70,81,26,89,17,63,60,48,29,77,53,80,80,12,79,80,76,37,80,79,54,17,73,68,15,40,64,81,5,62,74,27,42,72,93,2,21,46,29,76,51,61,13,19,21,96,45,38,47,87,47,67,95,82,56,51,32,1,73,59,83,65,33,92,8,94,14,45,60,20,87,82,1,29,9,15,10,76,90,27,80,30,65,9,79,2,97,41,75,8,68,23,37,19,80,22,15,52,93,79,79,23,61,37,5,88,28,5,44,31,36,20,37,71,45,21,25,16,2,79,28,67,19,47,9,19,64,46,8,88,29,75,65,22,64,32,78,20,88,48,72,90,84,50,59,63,20,86,58,50,97,14,61,10,68,45,81,43,27,95,95,80,91,68,17,83,55,49,41,9,33,51,19,60,54,24,43,68,36,60,5,20,97,14,55,70,35,27,96,80,32,3,63,52,70,31,2,58,3,70,54,35,83,87,83,50,14,97,47,38,44,71,52,3,97,83,24,36,11,45,5,87,21,80,88,98,45,42,37,96,28,42,72,47,39,58,78,23,24,50,78,1,87,81,32,49,21,60,28,33,29,5,38,36,8,59,52,66,67,15,95,87,61,67,80,54,58,36,89,72,96,78,32,58,37,39,76,43,69,20,96,26,71,98,50,36,46,18,68,24,50,43,32,95,70,18,18,66,84,18,13,44,44,6,4,42,37,31,88,18,82,29,41,88,12,96,58,61,72,72,79,80,60,48,15,26,24,29,45,7,36,2,16,31,13,60,13,84,53,4,5,94,52,39,8,14,6,30,70,75,46,13,38,57,24,24,69,51,87,96,65,57,57,14,10,27,97,98,18,4,92,47,6,17,66,93,3,82,83,56,75,82,75,92,35,68,1,43,51,24,13,57,33,87,62,92,38,61,90,1,95,45,4,70,63,34,43,67,5,91,75,23,55,27,70,52,16,78,87,46,2,56,89,88,58,23,95,31,98,96,22,11,61,29,55,77,50,55,96,64,33,14,51,25,47,48,3,15,2,18,63,12,56,47,88,74,32,87,21,74,53,37,93,21,37,9,42,16,39,57,57,59,57,96,88,17,14,5,85,18,40,54,47,80,22,35,84,10,43,91,10,82,85,52,70,69,64,44,93,77,72,80,39,86,20,44,48,24,72,810138\".split(',')//require('../utils').readArray('./day-13/input.txt');\r\n\r\nconst getMapKey = (x, y) => `(${x},${y})`;\r\n\r\nconst program = makeProgram(intcode);\r\n\r\nconst TILE_TYPES = ['EMPTY', 'WALL', 'BLOCK', 'PADDLE', 'BALL'];\r\nconst TILE_WIDTH = 10;\r\nconst TILE_HEIGHT = 10;\r\n\r\nconst COLORS = {\r\n    'EMPTY': '#ffffff',\r\n    'BLOCK': '#000000',\r\n    'WALL': '#ececec',\r\n    'PADDLE': '#00ff00',\r\n    'BALL': '#0000ff'\r\n}\r\n\r\n\r\nconst game = () => {\r\n    const tiles = {};\r\n    let score = 0;\r\n    let playerPos;\r\n    let ballPos;\r\n    let lastUpdate = Date.now();\r\n    const FPS = 60;\r\n    let nextDir = 0;\r\n    const canvas = document.getElementById('game');\r\n    const context = canvas.getContext('2d');\r\n    const scoreElement = document.getElementById('score');\r\n\r\n    const updateTile = (x, y, type) => {\r\n        if (x === -1 && y === 0) { // Update score\r\n            score = type | 0;\r\n        } else {\r\n            const mapKey = getMapKey(x | 0, y | 0);\r\n            const tileType = TILE_TYPES[type | 0];\r\n            if (tileType === 'BALL') {\r\n                ballPos = {\r\n                    x,\r\n                    y\r\n                }\r\n            } else if (tileType === 'PADDLE') {\r\n                playerPos = {\r\n                    x,\r\n                    y\r\n                }\r\n            } else {\r\n                if (mapKey in tiles) {\r\n                    tiles[mapKey].type = TILE_TYPES[type | 0];\r\n                } else {\r\n                    tiles[mapKey] = {\r\n                        x,\r\n                        y,\r\n                        type: TILE_TYPES[type | 0]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const draw = () => {\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n        Object.values(tiles).forEach(tile => {\r\n            context.fillStyle = COLORS[tile.type]\r\n            context.fillRect(tile.x * TILE_WIDTH, tile.y * TILE_HEIGHT, TILE_WIDTH, TILE_HEIGHT);\r\n        })\r\n        if (playerPos) {\r\n            context.fillStyle = COLORS.PADDLE;\r\n            context.fillRect(playerPos.x * TILE_WIDTH, playerPos.y * TILE_HEIGHT, TILE_WIDTH, TILE_HEIGHT);\r\n        }\r\n        if (ballPos) {\r\n            context.fillStyle = COLORS.BALL;\r\n            context.fillRect(ballPos.x * TILE_WIDTH, ballPos.y * TILE_HEIGHT, TILE_WIDTH, TILE_HEIGHT);\r\n        }\r\n        scoreElement.innerHTML = `Score: ${score}`;\r\n    }\r\n\r\n    const update = () => {\r\n        if (program.state === 'EXIT') {\r\n            scoreElement.innerHTML = 'GAME OVER! ' + scoreElement.innerHTML;\r\n        } else {\r\n            if (Date.now() - lastUpdate > 1000 / FPS || program.state === 'ON') {\r\n                if(program.state === 'INPUT') {\r\n                    if(ballPos.x < playerPos.x ) {\r\n                        nextDir = -1;\r\n                    } else if (ballPos.x > playerPos.x) {\r\n                        nextDir = 1;\r\n                    } else {\r\n                        nextDir = 0;\r\n                    }\r\n                }\r\n                const output = program.run(nextDir);\r\n                if (output) {\r\n                    const [cx1, cy1, ct1] = output;\r\n                    updateTile(cx1 | 0, cy1 | 0, ct1);\r\n                    draw();\r\n                }\r\n                lastUpdate = Date.now();\r\n            }\r\n            window.requestAnimationFrame(update)\r\n        }\r\n    }\r\n\r\n    document.addEventListener('keyup', e => {\r\n        switch (e.key) {\r\n            case 'ArrowRight':\r\n                nextDir = 1;\r\n                break;\r\n            case 'ArrowLeft':\r\n                nextDir = -1;\r\n                break;\r\n            default:\r\n                nextDir = 0\r\n                break;\r\n        }\r\n    })\r\n\r\n    update();\r\n}\r\n\r\ngame();","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}